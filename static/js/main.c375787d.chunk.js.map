{"version":3,"sources":["components/Container/Container.js","components/Button/Button.js","components/Input/Input.js","assets/search.svg","components/Select/Select.js","store/booksStore.js","http/googleBooksAPI.js","components/Form/Form.js","components/SearchForm/SearchForm.js","pages/Book/Book.js","assets/book.png","components/Card/Card.js","components/Spinner/Spinner.js","components/Cards/Cards.js","components/ScrollUpButton/ScrollUpButton.js","routes.js","utils/consts.js","pages/Main.js","AppRouter.js","App.js","index.js"],"names":["Container","props","children","className","Button","rest","type","Input","Select","this","_books","_limit","_startIndex","_searchValue","_errorOnRequest","_categories","all","art","biography","computers","history","medical","poetry","_sortingTypes","relevance","newest","_isFetching","_selectedCategory","_selectedSortingType","_totalBooksOnQuery","makeAutoObservable","bool","category","sortingType","text","books","length","setStartIndex","index","count","portion","booksStore","limit","fetchBooks","a","fetch","constructUrl","response","json","data","ok","Error","fetchMoreBooks","toJS","startIndex","query","searchValue","sorting","selectedSortingType","selectedCategory","Form","observer","categories","filters","sortingTypes","useHistory","pathname","useLocation","categoriesRef","useRef","filtersRef","useState","isCategoryOpen","setIsCategoryOpen","isFilterOpen","setIsFilterOpen","getBooks","setIsFetching","items","totalItems","setBooks","setTotalBooksOnQuery","setErrorOnRequest","push","message","useEffect","checkIsClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","placeholder","onInput","setSearchValue","value","onKeyDown","key","onClick","src","SearchImg","width","alt","ref","Object","keys","map","setSelectedCategory","filter","setSelectedSortingType","SearchForm","Book","info","location","state","volumeInfo","image","imageLinks","thumbnail","title","authors","description","authorsHTML","join","categoriesHTML","Card","book","to","id","bookPlaceholder","i","renderAuthors","Spinner","Cards","getMoreBooks","setMoreBooks","totalBooksOnQuery","isFetching","errorOnRequest","ScrollUpButton","showBelow","isShowed","setIsShowed","handleScroll","window","pageYOffset","scrollTo","top","behavior","Routes","path","Component","BOOK_ROUTE","AppRouter","routes","component","exact","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c375787d.chunk.js","sourcesContent":["import React from 'react'\nimport './Container.scss'\n\nconst Container = (props) => {\n    const { children, className = '' } = props\n    return <div className={'Container ' + className}>{children}</div>\n}\n// test\n\nexport default Container\n","import React from 'react'\nimport './Button.scss'\n\nconst Button = (props) => {\n    const { children, className = '', ...rest } = props\n    return (\n        <button type='button' className={className + ' Button'} {...rest}>\n            {children}\n        </button>\n    )\n}\n\nexport default Button\n","import React from 'react'\nimport './Input.scss'\n\nconst Input = (props) => {\n    const { className = '', type = 'text', ...rest } = props\n    return <input className={className + ' Input'} type={type} {...rest} />\n}\n\nexport default Input\n","export default __webpack_public_path__ + \"static/media/search.9748c2d7.svg\";","import React from 'react'\nimport './Select.scss'\n\nconst Select = (props) => {\n    const { children, className = '', ...rest } = props\n    return (\n        <div className={className + ' Select'} {...rest}>\n            {children}\n        </div>\n    )\n}\n\nexport default Select\n","import { makeAutoObservable } from 'mobx'\n\nclass booksStore {\n    constructor() {\n        this._books = []\n        this._limit = 30\n        this._startIndex = 0\n        this._searchValue = ''\n        this._errorOnRequest = ''\n        this._categories = {\n            all: 'Все',\n            art: 'Искусство',\n            biography: 'Биография',\n            computers: 'Компьютеры',\n            history: 'История',\n            medical: 'Медицина',\n            poetry: 'Поэзия',\n        }\n        this._sortingTypes = {\n            relevance: 'По совпадению',\n            newest: 'По новизне',\n        }\n        this._isFetching = false\n        this._selectedCategory = 'all'\n        this._selectedSortingType = 'relevance'\n        this._totalBooksOnQuery = 0\n        makeAutoObservable(this)\n    }\n\n    setIsFetching(bool) {\n        this._isFetching = bool\n        return this\n    }\n\n    setSelectedCategory(category) {\n        this._selectedCategory = category\n        return this\n    }\n\n    setSelectedSortingType(sortingType) {\n        this._selectedSortingType = sortingType\n        return this\n    }\n\n    setSearchValue(text) {\n        this._searchValue = text\n        return this\n    }\n\n    setBooks(books) {\n        this._startIndex = books.length\n        this._books = books\n        return this\n    }\n\n    setMoreBooks(books) {\n        if (!books) return\n        this._books = [...this._books, ...books]\n        this.setStartIndex(books.length)\n        return this\n    }\n\n    setErrorOnRequest(text) {\n        this._errorOnRequest = text\n        return this\n    }\n\n    setStartIndex(index) {\n        this._startIndex += index\n        return this\n    }\n\n    setTotalBooksOnQuery(count) {\n        this._totalBooksOnQuery = count\n        return this\n    }\n\n    get errorOnRequest() {\n        return this._errorOnRequest\n    }\n\n    get books() {\n        return this._books\n    }\n\n    get limit() {\n        return this._limit\n    }\n\n    get startIndex() {\n        return this._startIndex\n    }\n\n    get searchValue() {\n        return this._searchValue\n    }\n\n    get categories() {\n        return this._categories\n    }\n\n    get sortingTypes() {\n        return this._sortingTypes\n    }\n\n    get selectedCategory() {\n        return this._selectedCategory\n    }\n\n    get selectedSortingType() {\n        return this._selectedSortingType\n    }\n\n    get totalBooksOnQuery() {\n        return this._totalBooksOnQuery\n    }\n\n    get isFetching() {\n        return this._isFetching\n    }\n}\n\nexport default new booksStore()\n","import { toJS } from 'mobx'\nimport booksStore from '../store/booksStore'\n\nconst baseURL = 'https://www.googleapis.com/books/v1/volumes?q='\n\nconst apiKey = '&key=' + process.env.REACT_APP_GOOGLE_API_KEY\nconst portion = `&maxResults=${booksStore.limit}`\n\nexport async function fetchBooks() {\n    const response = await fetch(constructUrl())\n    const data = await response.json()\n\n    if (!response.ok) {\n        throw new Error('Something went wrong')\n    } else if (!('items' in data)) {\n        throw new Error('No results on request')\n    }\n\n    return data\n}\n\nexport async function fetchMoreBooks() {\n    let response = await fetch(constructUrl(toJS(booksStore.startIndex)))\n    response = await response.json()\n\n    if (!('items' in response)) {\n        throw new Error('No results on request')\n    }\n\n    return response\n}\n\nfunction constructUrl(index) {\n    const query = booksStore.searchValue\n    const sorting = `&orderBy=${booksStore.selectedSortingType}`\n    const category =\n        booksStore.selectedCategory === 'all'\n            ? ''\n            : `+subject:${booksStore.selectedCategory}`\n    const startIndex = `&startIndex=${index ? index : 0}`\n\n    return baseURL + query + category + portion + startIndex + sorting + apiKey\n}\n","import React, { useEffect, useRef, useState } from 'react'\nimport Button from '../Button/Button'\nimport Input from '../Input/Input'\nimport './Form.scss'\nimport SearchImg from '../../assets/search.svg'\nimport Select from '../Select/Select'\nimport { observer } from 'mobx-react-lite'\nimport booksStore from '../../store/booksStore'\nimport { fetchBooks } from '../../http/googleBooksAPI'\nimport { toJS } from 'mobx'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nconst Form = observer(() => {\n    const categories = toJS(booksStore.categories)\n    const filters = toJS(booksStore.sortingTypes)\n    const history = useHistory()\n    const { pathname } = useLocation()\n\n    const categoriesRef = useRef()\n    const filtersRef = useRef()\n\n    const [isCategoryOpen, setIsCategoryOpen] = useState(false)\n    const [isFilterOpen, setIsFilterOpen] = useState(false)\n\n    useEffect(() => {\n        const checkIsClickOutside = (e) => {\n            if (\n                isCategoryOpen &&\n                categoriesRef.current &&\n                !categoriesRef.current.contains(e.target)\n            ) {\n                setIsCategoryOpen(false)\n            }\n            if (\n                isFilterOpen &&\n                filtersRef.current &&\n                !filtersRef.current.contains(e.target)\n            ) {\n                setIsFilterOpen(false)\n            }\n        }\n\n        document.addEventListener('click', checkIsClickOutside)\n\n        return () => {\n            document.removeEventListener('click', checkIsClickOutside)\n        }\n    }, [isCategoryOpen, isFilterOpen])\n\n    async function getBooks() {\n        try {\n            booksStore.setIsFetching(true)\n            const { items, totalItems } = await fetchBooks()\n            booksStore\n                .setBooks(items)\n                .setTotalBooksOnQuery(totalItems)\n                .setErrorOnRequest('')\n\n            if (pathname !== '/') history.push('/')\n        } catch (err) {\n            booksStore.setErrorOnRequest(err.message).setBooks([])\n        } finally {\n            booksStore.setIsFetching(false)\n        }\n    }\n\n    const onSeachInput = (e) => {\n        booksStore.setSearchValue(e.target.value)\n    }\n\n    const setNewCategory = (category) => {\n        booksStore.setSelectedCategory(category)\n        setIsCategoryOpen(false)\n    }\n\n    const setNewFilter = (filter) => {\n        setIsFilterOpen(false)\n        booksStore.setSelectedSortingType(filter)\n    }\n\n    function onSearchKeyDown(e) {\n        if (e.key === 'Enter') getBooks()\n    }\n\n    return (\n        <div className='Form'>\n            <div className='Form__search-line'>\n                <Input\n                    type='text'\n                    placeholder='Введите название книги'\n                    onInput={onSeachInput}\n                    onKeyDown={onSearchKeyDown}\n                    value={toJS(booksStore.searchValue)}\n                    className='Form__search-field'\n                />\n                <Button className='Form__button' onClick={getBooks}>\n                    <img src={SearchImg} width='20' alt='' />\n                </Button>\n            </div>\n            <div className='Form__filters'>\n                <div className='Form__select'>\n                    <div className='Form__filter-name'>Категории</div>\n                    <div ref={categoriesRef}>\n                        <Select>\n                            <button\n                                type='button'\n                                className={`${\n                                    'Select__selected ' +\n                                    (isCategoryOpen\n                                        ? 'Select__selected_active'\n                                        : '')\n                                }`}\n                                onClick={() =>\n                                    setIsCategoryOpen(!isCategoryOpen)\n                                }\n                            >\n                                {categories[toJS(booksStore.selectedCategory)]}\n                            </button>\n                            {isCategoryOpen ? (\n                                <ul className='Select__items'>\n                                    {Object.keys(categories).map((key) => (\n                                        <li\n                                            className='Select__item'\n                                            key={key}\n                                            onClick={() => setNewCategory(key)}\n                                        >\n                                            <button type='button'>\n                                                {categories[key]}\n                                            </button>\n                                        </li>\n                                    ))}\n                                </ul>\n                            ) : (\n                                ''\n                            )}\n                        </Select>\n                    </div>\n                </div>\n                <div className='Form__select'>\n                    <div className='Form__filter-name'>По релевантности</div>\n                    <div ref={filtersRef}>\n                        <Select>\n                            <button\n                                type='button'\n                                className={`${\n                                    'Select__selected ' +\n                                    (isFilterOpen\n                                        ? 'Select__selected_active'\n                                        : '')\n                                }`}\n                                onClick={() => setIsFilterOpen(!isFilterOpen)}\n                            >\n                                {filters[toJS(booksStore.selectedSortingType)]}\n                            </button>\n                            {isFilterOpen && (\n                                <ul className='Select__items'>\n                                    {Object.keys(filters).map((key) => (\n                                        <li\n                                            className='Select__item'\n                                            key={key}\n                                            onClick={() => setNewFilter(key)}\n                                        >\n                                            <button type='button'>\n                                                {filters[key]}\n                                            </button>\n                                        </li>\n                                    ))}\n                                </ul>\n                            )}\n                        </Select>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n})\n\nexport default Form\n","import React from 'react'\nimport Form from '../Form/Form'\nimport './SearchForm.scss'\n\nconst SearchForm = () => {\n    return (\n        <div className='SearchForm'>\n            <h1 className='SearchForm__title'>Поиск книг</h1>\n            <Form />\n        </div>\n    )\n}\n\nexport default SearchForm\n","import React from 'react'\nimport Container from '../../components/Container/Container'\nimport './Book.scss'\nimport SearchForm from '../../components/SearchForm/SearchForm'\n\nconst Book = (props) => {\n    const info = props.location.state.volumeInfo\n    const image = info ? info.imageLinks?.thumbnail : ''\n    const { title, authors, description, categories } = info\n    const authorsHTML = authors?.join(', ')\n    const categoriesHTML = categories?.join('/')\n    return (\n        <>\n            <SearchForm />\n            <Container>\n                <div className='Book'>\n                    <div className='Book__image'>\n                        <img src={image} alt='' />\n                    </div>\n                    <div>\n                        <div>{categoriesHTML}</div>\n                        <h1>{title}</h1>\n                        <div>{authorsHTML}</div>\n                        <div>{description}</div>\n                    </div>\n                </div>\n            </Container>\n        </>\n    )\n}\n\nexport default Book\n","export default __webpack_public_path__ + \"static/media/book.9e033eb4.png\";","import React from 'react'\nimport './Card.scss'\nimport bookPlaceholder from '../../assets/book.png'\nimport { Link } from 'react-router-dom'\n\nconst Card = (props) => {\n    const book = props.book\n\n    // Функция для вывода первых 3-х авторов через запятую\n    // На некоторые запросы выводится 70+ авторов (например, сборники рассказов), что не совсем презентабельно и информативно\n    const renderAuthors = function (authors) {\n        const authorsHTML = []\n        const limit = 3\n        for (let i = 0; i < authors.length; i++) {\n            authorsHTML.push(`${authors[i]}`)\n            if (i === limit) return authorsHTML.join(', ')\n        }\n        return authorsHTML.join(', ')\n    }\n\n    return (\n        <Link\n            to={{\n                pathname: `/book/${book.id}}`,\n                state: book,\n            }}\n            className='Card'\n        >\n            <div className='Card__image-wrap'>\n                <img\n                    src={\n                        book.volumeInfo.imageLinks\n                            ? book.volumeInfo.imageLinks.thumbnail\n                            : bookPlaceholder\n                    }\n                    className='Card__image'\n                    alt=''\n                />\n            </div>\n            <p className='Card__meta'>\n                {book.volumeInfo.categories && book.volumeInfo.categories[0]}\n            </p>\n            <h3 className='Card__title'>{book.volumeInfo.title}</h3>\n            {book.volumeInfo.authors && (\n                <p className='Card__meta'>\n                    {renderAuthors(book.volumeInfo.authors)}\n                </p>\n            )}\n        </Link>\n    )\n}\n\nexport default Card\n","import React from 'react'\nimport './Spinner.scss'\n\n// Готовый лоадер, взятый отсюда: https://loading.io/css/\nconst Spinner = () => {\n    return (\n        <div className='Spinner'>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    )\n}\n\nexport default Spinner\n","import React from 'react'\nimport Container from '../Container/Container'\nimport Card from '../Card/Card'\nimport booksStore from '../../store/booksStore'\nimport { observer } from 'mobx-react-lite'\nimport { toJS } from 'mobx'\nimport Button from '../Button/Button'\nimport { fetchMoreBooks } from '../../http/googleBooksAPI'\nimport './Cards.scss'\nimport Spinner from '../Spinner/Spinner'\n\nconst Cards = observer(() => {\n    const books = toJS(booksStore.books)\n\n    const getMoreBooks = async () => {\n        try {\n            booksStore.setIsFetching(true)\n            const { items, totalItems } = await fetchMoreBooks()\n            booksStore.setErrorOnRequest('')\n            booksStore.setMoreBooks(items).setTotalBooksOnQuery(totalItems)\n        } catch (err) {\n            booksStore.setErrorOnRequest(err.message)\n        } finally {\n            booksStore.setIsFetching(false)\n        }\n    }\n\n    return (\n        <>\n            <Container>\n                {books && books.length ? (\n                    <div className='Cards'>\n                        <h3>\n                            Найдено книг по запросу:{' '}\n                            {booksStore.totalBooksOnQuery}\n                        </h3>\n                        <div className='Cards__grid'>\n                            {/* Гугл возвращает результаты с дубликатам, порой 5+. Фильтровать при каждой подгрузке, вероятно, не лучшая идея, а добавление к id индекса позволяет получить уникальный ключ. Использовать только индекс, как понимаю, плохая практика\n                             */}\n                            {books && books.length\n                                ? books.map((book, i) => (\n                                      <Card key={book.id + i} book={book} />\n                                  ))\n                                : ''}\n                        </div>\n                        <h4>На странице: {books.length}</h4>\n                        {booksStore.totalBooksOnQuery >\n                            booksStore.books.length &&\n                            !booksStore.isFetching &&\n                            !booksStore.errorOnRequest && (\n                                <Button\n                                    onClick={getMoreBooks}\n                                    className='Cards__load-btn'\n                                >\n                                    Загрузить ещё\n                                </Button>\n                            )}\n                        {booksStore.errorOnRequest}\n                    </div>\n                ) : (\n                    <h2>Ничего не найдено</h2>\n                )}\n                {booksStore.isFetching && <Spinner />}\n            </Container>\n        </>\n    )\n})\n\nexport default Cards\n","import React, { useEffect } from 'react'\nimport { useState } from 'react/cjs/react.development'\nimport './ScrollUpButton.scss'\n\nconst ScrollUpButton = ({ showBelow }) => {\n    const [isShowed, setIsShowed] = useState(false)\n\n    const handleScroll = () => {\n        if (window.pageYOffset > showBelow) {\n            if (!isShowed) setIsShowed(true)\n        } else {\n            if (isShowed) setIsShowed(false)\n        }\n    }\n\n    useEffect(() => {\n        if (!showBelow) return\n        window.addEventListener('scroll', handleScroll)\n        return () => window.removeEventListener('scroll', handleScroll)\n    })\n\n    const handleClick = () => {\n        window.scrollTo({ top: 0, behavior: 'smooth' })\n    }\n\n    return (\n        <>\n            {isShowed && (\n                <button\n                    type='button'\n                    className='ScrollUpButton'\n                    onClick={handleClick}\n                ></button>\n            )}\n        </>\n    )\n}\n\nexport default ScrollUpButton\n","import Book from './pages/Book/Book'\nimport Main from './pages/Main'\nimport { BOOK_ROUTE, MAIN_ROUTE } from './utils/consts'\n\nexport const Routes = [\n    {\n        path: MAIN_ROUTE,\n        Component: Main,\n    },\n    {\n        path: BOOK_ROUTE + '/:id',\n        Component: Book,\n    },\n]\n","export const MAIN_ROUTE = \"/\";\nexport const BOOK_ROUTE = \"/book\";\n","import React from 'react'\nimport Cards from '../components/Cards/Cards'\nimport ScrollUpButton from '../components/ScrollUpButton/ScrollUpButton'\nimport SearchForm from '../components/SearchForm/SearchForm'\n\nconst Main = () => {\n    return (\n        <>\n            <SearchForm />\n            <Cards />\n            <ScrollUpButton showBelow={300} />\n        </>\n    )\n}\n\nexport default Main\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router'\nimport { Routes } from './routes'\nimport { MAIN_ROUTE } from './utils/consts'\n\nconst AppRouter = () => {\n    const routes = Routes\n    return (\n        <Switch>\n            {routes.map(({ path, Component }) => (\n                <Route key={path} path={path} component={Component} exact />\n            ))}\n            <Redirect to={MAIN_ROUTE} />\n        </Switch>\n    )\n}\n\nexport default AppRouter\n","import './App.scss'\nimport { BrowserRouter } from 'react-router-dom'\nimport AppRouter from './AppRouter'\n\nfunction App() {\n    return (\n        <div className='App'>\n            <BrowserRouter>\n                <AppRouter />\n            </BrowserRouter>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}